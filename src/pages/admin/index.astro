---
import { createSignal, onMount } from 'solid-js';
import { supabase } from '../../lib/supabaseClient';

let products = [];
const [name, setName] = createSignal('');
const [category, setCategory] = createSignal('niños');
let imageRefFile, imageFullFile;

onMount(async () => {
  const { data } = await supabase.from('products').select('*');
  products = data || [];
});

async function uploadFile(file, bucket) {
  const formData = new FormData();
  formData.append('file', file);
  formData.append('bucket', bucket);
  const res = await fetch('/api/upload', { method: 'POST', body: formData });
  const json = await res.json();
  return json.url;
}

async function createProduct(e) {
  e.preventDefault();
  const image_ref = await uploadFile(imageRefFile, 'product-images-ref');
  const image_full = await uploadFile(imageFullFile, 'product-images-full');
  await fetch('/api/products', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ name: name(), category: category(), image_ref, image_full })
  });
  location.reload();
  }
}
function filterProducts() {
  const query = document.getElementById('filter').value.toLowerCase();
  const cards = document.querySelectorAll('.product-card');
  cards.forEach(card=>{
    const name = card.dataset.name.toLowerCase();
    const cat = card.dataset.category.toLowerCase();
    card.style.display = (name.includes(query) || cat.includes(query))?'block':'none';
  });
}
</script>
</head>
<body>
<div class="container">
<h1>Panel Administrativo de Productos</h1>

{message && (
  <div class={`message ${message.toLowerCase().includes('error') ? 'message-error' : 'message-success'}`}>
    {message}
  </div>
)}

<div class="tabs">
  <div id="tab-add" class={`tab ${activeTab==='add'?'tab-active':'tab-inactive'}`} onclick="switchTab('add')">Agregar producto</div>
  <div id="tab-list" class={`tab ${activeTab==='list'?'tab-active':'tab-inactive'}`} onclick="switchTab('list')">Productos cargados</div>
</div>

<!-- TAB AGREGAR PRODUCTO -->
<div id="add-tab" style="display:${activeTab==='add'?'block':'none'}" class="card mb-6">
  <h2>Agregar nuevo producto</h2>
  <form method="post" enctype="multipart/form-data">
    <input type="hidden" name="action" value="add" />
    <label>Nombre</label>
    <input type="text" name="name" required />
    <label>Categoría</label>
    <select name="category" required>
      <option value="Niños">Niños</option>
      <option value="Niñas">Niñas</option>
      <option value="Mascotas">Mascotas</option>
    </select>
    <label>Imagen de referencia</label>
    <input type="file" name="imgRef" accept="image/*" onchange="previewImage(this,'previewRef')" required />
    <img id="previewRef" class="preview" src="" alt="Preview Ref" />
    <label>Imagen cuerpo completo</label>
    <input type="file" name="imgFull" accept="image/*" onchange="previewImage(this,'previewFull')" required />
    <img id="previewFull" class="preview" src="" alt="Preview Full" />
    <button type="submit" class="btn btn-blue">Agregar producto</button>
  </form>
</div>

<!-- TAB PRODUCTOS CARGADOS -->
<div id="list-tab" style="display:${activeTab==='list'?'block':'none'}">
  <input type="text" id="filter" class="search-input" placeholder="Filtrar por nombre o categoría..." oninput="filterProducts()" />

  <div class="grid">
    {products.map(p=>(
      <div class="card product-card" data-name={p.name} data-category={p.category}>
        <img src={p.image_url_ref} style="height:200px;width:100%" />
        <form method="post">
          <input type="hidden" name="id" value={p.id} />
          <label>Nombre</label>
          <input type="text" name="name" value={p.name} required />
          <label>Categoría</label>
          <select name="category" required>
            <option value="Niños" selected={p.category==='Niños'}>Niños</option>
            <option value="Niñas" selected={p.category==='Niñas'}>Niñas</option>
            <option value="Mascotas" selected={p.category==='Mascotas'}>Mascotas</option>
          </select>
          <input type="hidden" name="action" value="edit" />
          <button type="submit" class="btn btn-blue mb-2">Actualizar</button>
        </form>
        <form method="post">
          <input type="hidden" name="id" value={p.id} />
          <input type="hidden" name="action" value="delete" />
          <button type="submit" class="btn btn-red">Eliminar</button>
        </form>
      </div>
    ))}
  </div>
</div>
</div>
</body>
</html>
