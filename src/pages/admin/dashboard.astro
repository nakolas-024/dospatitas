---
export const prerender = false;
import { supabase } from '../../lib/supabase';

let message = null;
let filterCategory = null;
let searchQuery = null;

// Manejo de formularios POST
if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData();
  const action = data.get('action');

  if (action === 'add') {
    const name = data.get('name');
    const category = data.get('category');
    const imgRef = data.get('imgRef');
    const imgFull = data.get('imgFull');

    const fileRefName = `${Date.now()}-${imgRef.name}`;
    const fileFullName = `${Date.now()}-${imgFull.name}`;

    await supabase.storage.from('product-images').upload(fileRefName, imgRef);
    await supabase.storage.from('product-images').upload(fileFullName, imgFull);

    const urlRef = `${import.meta.env.PUBLIC_SUPABASE_URL}/storage/v1/object/public/product-images/${fileRefName}`;
    const urlFull = `${import.meta.env.PUBLIC_SUPABASE_URL}/storage/v1/object/public/product-images/${fileFullName}`;

    const { error: insertError } = await supabase.from('products').insert([{
      name,
      category,
      image_url_ref: urlRef,
      image_url_full: urlFull
    }]);

    message = insertError ? 'Error al agregar producto' : 'Producto agregado correctamente 游꿀';
  }

  if (action === 'delete') {
    const id = data.get('id');
    await supabase.from('products').delete().eq('id', id);
    message = 'Producto eliminado';
  }

  if (action === 'edit') {
    const id = data.get('id');
    const name = data.get('name');
    const category = data.get('category');
    await supabase.from('products').update({ name, category }).eq('id', id);
    message = 'Producto actualizado';
  }

  if (action === 'filter') {
    filterCategory = data.get('category');
    searchQuery = data.get('search');
  }
}

// Obtener productos
let { data: products } = await supabase.from('products').select('*').order('created_at', { ascending: false });

// Aplicar filtro y b칰squeda
if (filterCategory && filterCategory !== 'Todos') {
  products = products.filter(p => p.category === filterCategory);
}
if (searchQuery) {
  products = products.filter(p => p.name.toLowerCase().includes(searchQuery.toLowerCase()));
}
---

<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Dashboard Admin | Dos Patitas</title>
</head>
<body class="font-sans">

  <!-- Header -->
  <header class="header">
    <h1>Dos Patitas - Panel Admin</h1>
    <div class="user-menu">
      <span>Admin</span>
      <button class="logout-btn">Cerrar sesi칩n</button>
    </div>
  </header>

  <div class="dashboard">
    <!-- Sidebar -->
    <aside class="sidebar">
      <nav>
        <ul>
          <li class="active">Productos</li>
          <li>Pedidos</li>
          <li>Usuarios</li>
          <li>Ajustes</li>
        </ul>
      </nav>
    </aside>

    <!-- Main content -->
    <main class="main-content">
      {message && <p class="message">{message}</p>}

      <!-- Filtros -->
      <div class="filters">
        <form method="post" class="filter-form">
          <input type="hidden" name="action" value="filter" />
          <input type="text" name="search" placeholder="Buscar producto..." value={searchQuery || ''} />
          <select name="category">
            <option value="Todos">Todos</option>
            <option value="Ni침os" selected={filterCategory==='Ni침os'}>Ni침os</option>
            <option value="Ni침as" selected={filterCategory==='Ni침as'}>Ni침as</option>
            <option value="Mascotas" selected={filterCategory==='Mascotas'}>Mascotas</option>
          </select>
          <button type="submit">Filtrar</button>
        </form>
      </div>

      <!-- Formulario agregar producto -->
      <div class="card">
        <h2>Agregar nuevo producto</h2>
        <form method="post" enctype="multipart/form-data" class="form">
          <input type="hidden" name="action" value="add" />
          <input type="text" name="name" placeholder="Nombre del producto" required />
          <select name="category" required>
            <option value="Ni침os">Ni침os</option>
            <option value="Ni침as">Ni침as</option>
            <option value="Mascotas">Mascotas</option>
          </select>
          <label>Imagen de referencia</label>
          <input type="file" name="imgRef" accept="image/*" required />
          <label>Imagen cuerpo completo</label>
          <input type="file" name="imgFull" accept="image/*" required />
          <button type="submit">Agregar producto</button>
        </form>
      </div>

      <!-- Lista de productos -->
      <div class="product-grid">
        {products.map(p => (
          <div class="product-card">
            <img src={p.image_url_ref} alt={p.name} onclick={`openImageModal('${p.image_url_full}')`} />
            <div class="product-info">
              <h3>{p.name}</h3>
              <p>{p.category}</p>

              <!-- Edit / Delete -->
              <div class="card-actions">
                <form method="post">
                  <input type="hidden" name="id" value={p.id} />
                  <input type="hidden" name="action" value="delete" />
                  <button type="submit">Eliminar</button>
                </form>
                <button class="edit-btn" onclick={`openEditModal('${p.id}','${p.name}','${p.category}')`}>Editar</button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </main>
  </div>

  <!-- Modales -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeEditModal()">&times;</span>
      <h3>Editar producto</h3>
      <form method="post" id="editForm">
        <input type="hidden" name="action" value="edit" />
        <input type="hidden" name="id" />
        <input type="text" name="name" placeholder="Nombre" required />
        <select name="category" required>
          <option value="Ni침os">Ni침os</option>
          <option value="Ni침as">Ni침as</option>
          <option value="Mascotas">Mascotas</option>
        </select>
        <button type="submit">Actualizar</button>
      </form>
    </div>
  </div>

  <div id="imageModal" class="modal">
    <span class="close" onclick="closeImageModal()">&times;</span>
    <img class="modal-img" id="modalImage" />
  </div>

  <script>
    function openEditModal(id, name, category) {
      const modal = document.getElementById('editModal');
      modal.style.display = 'block';
      const form = document.getElementById('editForm');
      form.id.value = id;
      form.name.value = name;
      form.category.value = category;
    }
    function closeEditModal() { document.getElementById('editModal').style.display = 'none'; }
    function openImageModal(src) {
      document.getElementById('modalImage').src = src;
      document.getElementById('imageModal').style.display = 'flex';
    }
    function closeImageModal() { document.getElementById('imageModal').style.display = 'none'; }
  </script>

</body>

<style>
body { margin:0; background:#f7f8fa; color:#333; font-family:sans-serif; }
.header { display:flex; justify-content:space-between; align-items:center; background:#ff7f50; color:white; padding:1rem 2rem; }
.header h1 { font-size:1.5rem; }
.user-menu { display:flex; gap:1rem; align-items:center; }
.logout-btn { background:white; color:#ff7f50; border:none; padding:0.5rem 1rem; border-radius:6px; cursor:pointer; }
.dashboard { display:flex; min-height:calc(100vh - 64px); }
.sidebar { width:220px; background:#2c3e50; color:white; padding:2rem 1rem; }
.sidebar ul { list-style:none; padding:0; }
.sidebar li { padding:0.75rem 1rem; cursor:pointer; border-radius:6px; margin-bottom:0.5rem; }
.sidebar li.active, .sidebar li:hover { background:#34495e; }
.main-content { flex:1; padding:2rem; }
.message { background:#d4edda; color:#155724; padding:0.75rem 1rem; border-radius:8px; margin-bottom:1rem; }
.card { background:white; padding:1.5rem; border-radius:12px; margin-bottom:2rem; box-shadow:0 4px 6px rgba(0,0,0,0.05); }
.card h2 { margin-top:0; margin-bottom:1rem; }
.form input[type="text"], .form select, .form input[type="file"] { display:block; width:100%; margin-bottom:0.75rem; padding:0.5rem; border-radius:6px; border:1px solid #ccc; }
.form button { background:#ff7f50; color:white; border:none; padding:0.75rem 1rem; border-radius:6px; cursor:pointer; transition:0.2s; }
.form button:hover { background:#e76b3a; }
.filters { margin-bottom:1rem; }
.filter-form { display:flex; gap:0.5rem; }
.filter-form input, .filter-form select, .filter-form button { padding:0.5rem; border-radius:6px; border:1px solid #ccc; }
.filter-form button { background:#ff7f50; color:white; border:none; cursor:pointer; }
.filter-form button:hover { background:#e76b3a; }
.product-grid { display:grid; grid-template-columns:repeat(auto-fill,minmax(250px,1fr)); gap:1.5rem; }
.product-card { background:white; border-radius:12px; overflow:hidden; box-shadow:0 4px 6px rgba(0,0,0,0.05); transition:0.2s; }
.product-card:hover { transform:translateY(-3px); }
.product-card img { width:100%; height:180px; object-fit:cover; cursor:pointer; }
.product-info { padding:1rem; }
.product-info h3 { margin:0; font-size:1.1rem; font-weight:bold; }
.product-info p { color:#666; margin:0.25rem 0 0.5rem 0; }
.card-actions { display:flex; gap:0.5rem; margin-top:0.5rem; }
.card-actions button, .edit-btn { background:#e74c3c; color:white; padding:0.5rem 0.75rem; border-radius:6px; border:none; cursor:pointer; }
.card-actions button:hover, .edit-btn:hover { background:#c0392b; }
.modal { display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.7); justify-content:center; align-items:center; z-index:100; }
.modal-content { background:white; padding:2rem; border-radius:12px; width:90%; max-width:400px; position:relative; }
.modal .close { position:absolute; top:10px; right:15px; font-size:1.5rem; cursor:pointer; }
.modal-img { max-width:90%; max-height:90%; border-radius:12px; }
</style>
