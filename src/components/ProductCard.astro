---
// src/components/ProductCard.astro (VERSIÓN FINAL Y CORRECTA)
export interface Props {
  product: {
    id: string | number;
    name: string;
    category: string;
    image_url_ref: string;
    [key: string]: any; // Permite otras propiedades
  };
}
const { product } = Astro.props;

// Guarda de seguridad
if (!product || typeof product !== 'object') {
  console.error("ProductCard recibió una prop 'product' inválida:", Astro.props);
  return null;
}

// Convertir a JSON SIN reemplazar comillas
const productJsonString = JSON.stringify(product);
---

<div
  class="product-card"
  data-product={productJsonString} {/* Pasamos el JSON directamente */}
>
  <div class="img-wrapper">
    <img src={product.image_url_ref || '/images/placeholder.png'} alt={product.name || 'Producto'} loading="lazy" />
  </div>
  <h3>{product.name || 'Nombre no disponible'}</h3>
  <p class="category">{product.category || 'Categoría no disponible'}</p>
</div>

<style>
/* Estilos (sin cambios respecto a la versión anterior) */
.product-card { background: #fff; border-radius: 12px; padding: 1rem; box-shadow: 0 6px 15px rgba(0,0,0,0.05); text-align: center; cursor: pointer; transition: transform 0.25s ease, box-shadow 0.25s ease; }
.product-card:hover { transform: translateY(-6px); box-shadow: 0 10px 25px rgba(0,0,0,0.1); }
.img-wrapper { overflow: hidden; border-radius: 10px; margin-bottom: 0.5rem; }
.product-card img { width: 100%; height: 240px; object-fit: cover; border-radius: 10px; transition: transform .4s ease; }
.product-card:hover img { transform: scale(1.05); }
.product-card h3 { font-size: 1.1rem; color: #333; font-weight: 700; margin: 0.6rem 0 0.2rem; }
.product-card .category { font-size: .9rem; color: #777; margin: 0; }
</style>