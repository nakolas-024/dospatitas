---
---
<div id="cart-panel" class="cart-window" aria-hidden="true">
  <div class="panel-header">
    <h3>Tu Pedido</h3>
    <button id="close-cart-btn" class="close-btn" aria-label="Cerrar carrito">×</button>
  </div>
  <div id="cart-items-container" class="cart-items-container">
     <p class="empty-cart-message">Cargando carrito...</p>
  </div>
  <div class="panel-footer">
    <a id="whatsapp-checkout-btn" href="#" class="whatsapp-btn disabled" target="_blank" rel="noopener noreferrer">
      Hacer Pedido
    </a>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const cartPanel = document.getElementById('cart-panel');
  const closeCartBtn = document.getElementById('close-cart-btn');
  const itemsContainer = document.getElementById('cart-items-container');
  const checkoutBtn = document.getElementById('whatsapp-checkout-btn');
  const WHATSAPP_NUMBER = '56958473816';

  if (!cartPanel || !closeCartBtn || !itemsContainer || !checkoutBtn) return;

  const closeCartWindow = () => { cartPanel.classList.remove('is-open'); };

  const updateCartContent = () => {
    let cart = [];
    try { cart = JSON.parse(localStorage.getItem('cart')) || []; } catch(e) { cart = []; }

    if (!Array.isArray(cart)) cart = [];

    if (cart.length === 0) {
      itemsContainer.innerHTML = '<p class="empty-cart-message">Tu carrito está vacío.</p>';
      checkoutBtn.classList.add('disabled');
    } else {
      let generatedHTML = '';
      cart.forEach((item) => {
          if (!item || !item.id) return;

          const itemId = item.id;
          const itemName = item.name || 'Producto';
          const itemQuantity = parseInt(item.quantity, 10) || 1;
          const imageUrl = item.image_url_ref || '/images/placeholder.png';

          generatedHTML += `
            <div class="cart-item" data-id="${itemId}">
              <div class="item-img-wrapper">
                <img src="${imageUrl}" alt="${itemName}" class="item-img"/>
              </div>
              <div class="item-name-container">
                <p class="item-name">${itemName}</p>
              </div>
              <div class="item-controls">
                <div class="item-quantity">
                  <button class="quantity-btn decrease" data-action="decrease">-</button>
                  <span>${itemQuantity}</span>
                  <button class="quantity-btn increase" data-action="increase">+</button>
                </div>
                <button class="remove-item-btn" aria-label="Eliminar">×</button>
              </div>
            </div>
          `;
      });
      itemsContainer.innerHTML = generatedHTML;
      checkoutBtn.classList.remove('disabled');
      updateWhatsappLink(cart, checkoutBtn);
    }
  };

  const updateWhatsappLink = (cart, btn) => {
    if (!cart || cart.length === 0) {
      btn.classList.add('disabled');
      btn.href = '#';
      return;
    }
    let text = "Hola! Quiero pedir los siguientes productos:%0A";
    cart.forEach(item => {
      text += `- ${item.name} x${item.quantity}%0A`;
    });
    btn.href = `https://wa.me/${WHATSAPP_NUMBER}?text=${text}`;
    btn.classList.remove('disabled');
  };

  const modifyItemQuantity = (productId, action) => {
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    const idx = cart.findIndex(i => i.id == productId);
    if (idx > -1) {
      cart[idx].quantity = action === 'increase' ? (cart[idx].quantity+1) : (cart[idx].quantity-1);
      if (cart[idx].quantity < 1) cart.splice(idx,1);
      localStorage.setItem('cart', JSON.stringify(cart));
      document.dispatchEvent(new CustomEvent('cartUpdated'));
    }
  };

  const removeItem = (productId) => {
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    const idx = cart.findIndex(i => i.id == productId);
    if (idx > -1) {
      cart.splice(idx,1);
      localStorage.setItem('cart', JSON.stringify(cart));
      document.dispatchEvent(new CustomEvent('cartUpdated'));
    }
  };

  document.addEventListener('cartUpdated', updateCartContent);
  closeCartBtn.addEventListener('click', closeCartWindow);
  itemsContainer.addEventListener('click', (e) => {
    const itemElement = e.target.closest('.cart-item');
    if (!itemElement) return;
    const productId = itemElement.dataset.id;
    if (e.target.matches('.quantity-btn')) modifyItemQuantity(productId, e.target.dataset.action);
    if (e.target.matches('.remove-item-btn')) removeItem(productId);
  });

  updateCartContent();
});
</script>

<style>
.cart-window {
  position: fixed;
  top: 0; right: -100%;
  width: 340px; max-width: 90%;
  height: 100%;
  background: #fff;
  box-shadow: -4px 0 20px rgba(0,0,0,0.25);
  transition: right 0.3s ease;
  z-index: 999;
  display: flex;
  flex-direction: column;
}
.cart-window.is-open { right: 0; }

.panel-header { display: flex; justify-content: space-between; align-items: center; padding: 1rem; border-bottom: 1px solid #ddd; }
.panel-header h3 { margin:0; }
.close-btn { background:none; border:none; font-size:1.5rem; cursor:pointer; }

.cart-items-container { flex:1; overflow-y:auto; padding:1rem; }

.cart-item {
  display: flex; align-items: center; gap: 0.75rem;
  padding-bottom: 0.75rem; margin-bottom: 0.75rem; border-bottom: 1px solid #f0f0f0;
}
.cart-item:last-child { border-bottom:none; margin-bottom:0; }

.item-img-wrapper {
  width:50px; height:50px;
  flex-shrink:0;
  border-radius:8px;
  overflow:hidden;
  background:#f5f5f5;
  display:flex;
  align-items:center;
  justify-content:center;
}
.item-img {
  width:100%;
  height:100%;
  object-fit:cover;
}

.item-name-container { flex-grow: 1; min-width:0; }
.item-name { font-weight:600; font-size:0.95rem; color:#374151; margin:0; line-height:1.3; white-space: nowrap; overflow:hidden; text-overflow:ellipsis; }

.item-controls { display:flex; align-items:center; gap:0.5rem; flex-shrink:0; }
.item-quantity { display:flex; align-items:center; gap:0.3rem; }
.quantity-btn { width:24px; height:24px; border:1px solid #e0e0e0; background:#fff; border-radius:50%; cursor:pointer; font-weight:600; font-size:1rem; color:#555; display:flex; align-items:center; justify-content:center; padding:0; }
.item-quantity span { font-weight:600; font-size:0.9rem; min-width:16px; text-align:center; }

.remove-item-btn { background:transparent; border:none; width:28px; height:28px; font-size:1.4rem; color:#f44336; cursor:pointer; display:flex; align-items:center; justify-content:center; padding:0; }

.panel-footer { padding:1rem; border-top:1px solid #ddd; }
.whatsapp-btn { display:block; text-align:center; background:#25d366; color:#fff; padding:0.8rem; border-radius:50px; text-decoration:none; font-weight:600; }
.whatsapp-btn.disabled { opacity:0.6; pointer-events:none; }

.empty-cart-message { text-align:center; color:#555; margin-top:2rem; }
.error-message { text-align:center; color:red; margin-top:2rem; }
</style>
