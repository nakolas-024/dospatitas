---
// src/pages/index.astro (CORREGIDO - Con Supabase)
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import ProductCard from '../components/ProductCard.astro';
import ProductFullCard from '../components/ProductFullCard.astro'; // Necesario para el modal
import { supabase } from '../lib/supabaseClient'; // Importar cliente Supabase

// Función para barajar un array (Fisher-Yates shuffle)
function shuffle(array) {
  let currentIndex = array.length, randomIndex;
  while (currentIndex !== 0) {
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex--;
    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];
  }
  return array;
}

// Cargar productos desde Supabase
let featuredProducts = [];
let fetchError = null;

try {
  // Pedimos todos los productos (o un límite razonable)
  const { data: allProducts, error } = await supabase
    .from('products')
    .select('id, name, category, image_url_ref, image_url_full') // Seleccionar columnas necesarias
    .limit(50); // Limitar por si tienes muchos productos

  if (error) throw error;

  // Seleccionar aleatoriamente N productos destacados
  if (allProducts && allProducts.length > 0) {
    featuredProducts = shuffle([...allProducts]).slice(0, 6); // Barajar una copia y tomar 6
  }
  console.log(`✅ Productos destacados cargados: ${featuredProducts.length}`);

} catch (err) {
  console.error("❌ Error al cargar productos destacados desde Supabase:", err);
  fetchError = err;
}
---

<Layout title="Dos Patitas - Carnets de Control Sano Personalizados">
  <main>
    <Hero />

    {/* Sección Productos Destacados */}
    <section class="featured-products">
      <div class="container">
        <div class="section-header">
          <h2>Diseños Destacados</h2>
          <p class="subtitle">Una selección de nuestros carnets más queridos.</p>
        </div>

        {fetchError ? (
          <p class="error">
            <strong>Error al cargar productos destacados:</strong> {fetchError.message || 'Error desconocido.'}
            <br /><small>(Ver consola del servidor)</small>
          </p>
        ) : featuredProducts.length > 0 ? (
          <div class="product-grid">
            {featuredProducts.map(product => (
              <>
                {/* Usar los componentes correctos */}
                <ProductCard product={product} />
                <ProductFullCard product={product} />
              </>
            ))}
          </div>
        ) : (
          <p class="no-products-message">No hay productos destacados para mostrar.</p>
        )}

        <div class="section-footer">
          <a href="/catalogo/ninos" class="btn-view-all"> {/* Enlace a una categoría por defecto */}
            Ver todos los diseños &rarr;
          </a>
        </div>
      </div>
    </section>

  </main>
</Layout>

<style>
/* Estilos específicos para esta página */
.featured-products { padding: 4rem 1rem 6rem; background: #fef7fb; } /* Ajustado padding */
.container { max-width: 1200px; margin: 0 auto; padding: 0 1.5rem; width: 100%; }
.section-header { text-align: center; margin-bottom: 3rem; }
.section-header h2 { font-size: 2.5rem; font-weight: 800; color: #2d3748; margin: 0 0 0.5rem; }
.section-header .subtitle { font-size: 1.1rem; color: #555; max-width: 600px; margin: 0 auto; }
.product-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 2.5rem; }
.section-footer { text-align: center; margin-top: 3rem; }
.btn-view-all { display: inline-block; background-color: #ffafcc; color: #333; padding: 1rem 2.5rem; border-radius: 50px; font-weight: 700; text-decoration: none; transition: all 0.3s ease; }
.btn-view-all:hover { background-color: #ff7bb0; color: #fff; transform: translateY(-2px) scale(1.03); }
.no-products-message, .error { grid-column: 1 / -1; text-align: center; color: #777; font-size: 1.1rem; padding: 3rem 1rem; background: #fff; border: 1px dashed #ddd; border-radius: 12px; }
.error { color: red; background: #ffeaea; border-color: red; }
.error small { color: #555; display: block; margin-top: 0.5rem; }
@media (min-width:1536px) { .container { max-width: 1440px; } }
</style>